Generating an RGB image from Arbitrary Multi-Spectral Filter Series
Daniel W. Dichter
2020-08-20

==================

Suppose you have a series of N visible-light filters (N ~= 5 to 10)
Each filter F1, F2, ... Fn has a known transmittance spectrum (wavelength vs. % light transmitted)
These filter spectra can overlap, be uneven, etc. although prefer a uniform bandpass series

With each filter you take a RAW grayscale image, I1, I2, ... In, with an ordinary camera
Images have dimensions m x n x 1, i.e. an m x n pixel grayscale image

Initialize a hyperspectral datacube, with dimensions m x n x w (w being the number of wavelengths)

For each pixel
	For each filter/image pair
		Multiply the image grayscale value by the corresponding filter transmittance spectrum
		Add the result to the datacube

Scale/normalize the datacube as needed

For each pixel in the datacube, convert the transmittance spectrum to an XYZ tristimulus value
Repeating for all pixels, generate m x n x 1 color channels for X, Y, Z tristimulus color
Scale/normalize X, Y, Z as needed
Convert to RGB and display

=================

OPEN QUESTIONS

x Need to account for white balance / illuminant?
	Maybe not? Going to try without and see result
	Thinking it may be necessary.
x Need to account for some filters being darker/lighter overall than others?
  	I think so. Dot filter tranmission with observer brightness (y_bar)
  Need to quantify quantum efficiency (QE) of my CMOS sensor?
  	Unsure

OBSERVATIONS

  Pixel spectra are limited to being linear combinations of filter spectra